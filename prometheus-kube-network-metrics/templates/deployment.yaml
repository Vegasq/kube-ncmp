{{- if .Values.manifests.deployment }}
{{- $envAll := . }}
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: {{ .Values.releaseName }}
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
      - nodes
      - pods
      - pods/exec
    verbs:
      - create
      - get
      - list

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: {{ .Values.releaseName }}
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: {{ .Values.releaseName }}
subjects:
- kind: ServiceAccount
  name: {{ .Values.releaseName }}
  namespace: {{ .Values.nameSpace }}

---
apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: {{ .Values.releaseName }}
  namespace: {{ .Values.nameSpace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.releaseName }}
  replicas: 1 # tells deployment to run 2 pods matching the template
  template:
    metadata:
      labels:
        app: {{ .Values.releaseName }}
    spec:
      serviceAccountName: {{ .Values.releaseName }}
      nodeSelector:
        {{ .Values.labels.kube_network_metrics.node_selector_key }}: {{ .Values.labels.kube_network_metrics.node_selector_value }}
      containers:
      - name: {{ .Values.releaseName }}
        image: {{ .Values.image.repository }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command: ["python3", "/tmp/kube_ncmp.py", "--namespace", "openstack", "--port", "6126"]
        ports:
          - name: metrics
            containerPort: 6126
        volumeMounts:
          - name: config-volume
            mountPath: /tmp
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Values.releaseName }}
            items:
            - key: ncmp
              path: kube_ncmp.py
{{- end }}
